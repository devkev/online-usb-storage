#!/bin/bash

set -e

cd /home/pi/online-usb-storage

mkdir -p files
chmod 771 files
while read user; do
	mkdir -p files/"$user"
	sudo chgrp -R "$user" files/"$user"
	chmod -R g=rwx,o= files/"$user"
	find files/"$user" \! -type d -print0 | xargs -0 --no-run-if-empty chmod g-x
done < users

mkdir -p tmpfs
chmod 700 tmpfs

if [ -e tmpfs/active.img ]; then
	echo "Already running, or stale files. Clean up and run again." 1>&2
	exit 1
fi

sudo mount -t tmpfs none tmpfs -o uid=pi,gid=pi,mode=0770

# Make an active image in ram, and give it to the gadget.
cp -ai template.img tmpfs/active.img
echo /home/pi/online-usb-storage/tmpfs/active.img | sudo tee /sys/devices/platform/soc/20980000.usb/gadget/lun0/file > /dev/null

# FIXME: other triggers might be necessary in some cases, eg. a physical button.
if ./wait-for-no-more-writes tmpfs/active.img; then

	# Detach the active image from the gadget.
	echo "" | sudo tee /sys/devices/platform/soc/20980000.usb/gadget/lun0/file > /dev/null

	# Process the active image.
	mv tmpfs/active.img tmpfs/process.img
	mkdir tmpfs/mnt
	sudo mount tmpfs/process.img tmpfs/mnt -o uid=pi,gid=pi,umask=0077,fmask=0177

	find tmpfs/mnt -print0 | xargs -0 --no-run-if-empty touch

	# FIXME: encrypt the files out onto durable storage, instead of just blindly copying out
	while read user; do
		rsync -aP tmpfs/mnt/"$user"/ files/"$user"/

		mkdir -p files/"$user"
		sudo chgrp -R "$user" files/"$user"
		chmod -R g=rwx,o= files/"$user"
		find files/"$user" \! -type d -print0 | xargs -0 --no-run-if-empty chmod g-x
	done < users

	sudo umount tmpfs/mnt

	# Throw away what's in ram, and then repeat.
	sudo umount tmpfs

	exec "$0" "$@"

else

	# probably user cancelled, but in any case, there were no actual writes, or the watcher died midway through writes, so it's a bust, just clean up
	rc=$?
	echo "Error: watcher returned $rc. Cleaning up and aborting." 1>&2

	# Detach the active image from the gadget.
	echo "" | sudo tee /sys/devices/platform/soc/20980000.usb/gadget/lun0/file > /dev/null

	# Throw away what's in ram.
	sudo umount tmpfs

	# Abort.
	exit $rc
fi

