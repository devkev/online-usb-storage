#!/bin/bash

function msg {
	echo "$(date): $*" | tee -a logfile 1>&2
}

function cleanup {
	rc=$?
	msg "Error: something returned $rc. Cleaning up and aborting."
	set +e
	trap "" ERR

	sudo umount tmpfs/mnt

	# Throw away the snapshot.
	sudo umount snapshot
	sudo lvremove --yes storage/storage_snapshot

	# Detach the active image from the gadget.
	echo "" | sudo tee /sys/devices/platform/soc/20980000.usb/gadget/lun0/file > /dev/null

	sudo umount mnt
	sudo vgchange -an storage
	sudo losetup -d "$loopdev"

	# Throw away what's in ram.
	sudo umount tmpfs

	msg "exit $rc"
	exit $rc
}

trap cleanup ERR

shopt -s nullglob

set -e

cd /home/pi/online-usb-storage

declare -A users
mkdir -p files
chmod 771 files
while read user; do
	users[$user]=1
	if [ ! "$firstuser" ]; then
		firstuser="$user"
	fi
	mkdir -p files/"$user"
	sudo chgrp -R "$user" files/"$user"
	chmod -R g=rwx,o= files/"$user"
	find files/"$user" \! -type d -print0 | xargs -0 --no-run-if-empty chmod g-x
done < users

mkdir -p tmpfs
chmod 700 tmpfs

if [ -e tmpfs/active.img ]; then
	msg "Error: Already running, or stale files. Clean up and run again."
	exit 1
fi

msg "Setting up..."
sudo mount -t tmpfs none tmpfs -o uid=pi,gid=pi,mode=0770

# Make an active image in ram, and give it to the gadget.
cp -ai template.img tmpfs/active.img
loopdev="$(sudo losetup --show -f tmpfs/active.img)"
mkdir -p mnt
sleeps=0
while [ ! -e /dev/mapper/storage-storage ]; do
	sleep 1
	sleeps=$(($sleeps + 1))
	if [ $sleeps -ge 10 ]; then
		msg "Error: /dev/mapper/storage-storage didn't appear even after waiting 10 secs, aborting"
		exit 1
	fi
done
sudo mount /dev/mapper/storage-storage mnt
msg "Starting USB gadget..."
echo /home/pi/online-usb-storage/mnt/image | sudo tee /sys/devices/platform/soc/20980000.usb/gadget/lun0/file > /dev/null

function wait_for_trigger {
	# FIXME: other triggers might be necessary in some cases, eg. a physical button.
	msg "Waiting for writes..."
	./wait-for-no-more-writes mnt/image
}

while wait_for_trigger; do
	msg "Saving new files..."

	# Take a snapshot.
	sudo lvcreate -q -pr --snapshot -n storage_snapshot -L 24M storage/storage > /dev/null

	# Process the snapshot.
	mkdir -p snapshot
	sudo mount /dev/mapper/storage-storage_snapshot snapshot -o ro

	mkdir -p tmpfs/mnt
	sudo mount snapshot/image tmpfs/mnt -o ro,uid=pi,gid=pi,umask=0077,fmask=0177

	while read i; do
		fname="${i#tmpfs/mnt/}"
		case "$fname" in
			*/*)
				user="${fname%%/*}"
				if [ "${#users[$user]}" ]; then
					actualfname="${fname#*/}"    # the filename but without any leading user directory
				else
					user="$firstuser"
					actualfname="$fname"    # the filename but without any leading user directory
				fi
				;;
			*)
				user="$firstuser"
				actualfname="$fname"    # the filename but without any leading user directory
				;;
		esac
		targetfname="files/$user/$actualfname"
		targetdir="${targetfname%/*}"
		if [ ! -e "$targetfname" ]; then
			mkdir -p "$targetdir"

			# FIXME: encrypt the files out onto durable storage, instead of just blindly copying out
			rsync -a tmpfs/mnt/"$fname" "$targetdir"
			touch "$targetfname"

			msg "Saved $targetfname"
		fi
	done < <(find tmpfs/mnt -type f)

	for user in "${!users[@]}"; do
		mkdir -p files/"$user"
		sudo chgrp -R "$user" files/"$user"
		chmod -R g=rwx,o= files/"$user"
		find files/"$user" \! -type d -print0 | xargs -0 --no-run-if-empty chmod g-x
	done

	fs_used_percent="$(df tmpfs/mnt | gawk 'NR == 2 { print gensub("%$", "", 1, $5); }')"
	msg "fs is ${fs_used_percent}% full"

	sudo umount tmpfs/mnt

	# Throw away the snapshot.
	sudo umount snapshot
	sudo lvremove -q --yes storage/storage_snapshot > /dev/null

	# If the usb filesystem is too full, then toss it and put a new one in.
	if [ "${fs_used_percent}" -ge 75 ]; then
		msg "fs is too full, recreating..."

		# Detach the active image from the gadget.
		echo "" | sudo tee /sys/devices/platform/soc/20980000.usb/gadget/lun0/file > /dev/null

		sudo umount mnt
		sudo vgchange -an storage
		sudo losetup -d "$loopdev"

		# Throw away what's in ram.
		sudo umount tmpfs

		msg "Setting up..."
		sudo mount -t tmpfs none tmpfs -o uid=pi,gid=pi,mode=0770

		# Make an active image in ram, and give it to the gadget.
		cp -ai template.img tmpfs/active.img
		loopdev="$(sudo losetup --show -f tmpfs/active.img)"
		mkdir -p mnt
		sleeps=0
		while [ ! -e /dev/mapper/storage-storage ]; do
			sleep 1
			sleeps=$(($sleeps + 1))
			if [ $sleeps -ge 10 ]; then
				msg "Error: /dev/mapper/storage-storage didn't appear even after waiting 10 secs, aborting"
				exit 1
			fi
		done
		sudo mount /dev/mapper/storage-storage mnt
		msg "Starting USB gadget..."
		echo /home/pi/online-usb-storage/mnt/image | sudo tee /sys/devices/platform/soc/20980000.usb/gadget/lun0/file > /dev/null

	fi

done

# probably user cancelled, but in any case, there were no actual writes, or the watcher died midway through writes, so it's a bust, just clean up and throw it all away
cleanup

